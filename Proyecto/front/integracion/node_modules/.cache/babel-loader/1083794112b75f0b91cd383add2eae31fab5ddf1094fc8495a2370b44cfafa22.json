{"ast":null,"code":"// import React from 'react';\n\n// export default function Form() {\n//   return (\n//     <form>\n//       <div>\n//         <label htmlFor=\"email\">Email:</label>\n//         <input type=\"email\" id=\"email\" name=\"email\" />\n//       </div>\n//       <div>\n//         <label htmlFor=\"password\">Password:</label>\n//         <input type=\"password\" id=\"password\" name=\"password\" />\n//       </div>\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// }\n//import React, { useState } from 'react';\n\n// const validate = (userData, setErrors, errors) => {\n//   const errors = {};\n//   if (!userData.email)  setErrors({...errors, email: \"Email vacio\"});\n//   else{\n//   if (/^\\w+([\\.-]?\\w+)@\\w+([\\.-]?\\w+)(\\.\\w{2,3})+$/.test(userData.email))\n//   setErrors({...errors, email: \"\"});\n//   else setErrors({ ...errors, email: \"Email inválido\" });\n//   }\n// }\n\n// const validatePassword = (userData, setErrors, errors) => {\n//  if (!userData.password)  setErrors({...errors, password: \"Ingrese una constraseña.\"});\n//  else{\n//  if (/^(?=.\\d)(?=.[a-z])(?=.*[A-Z]).{6,10}$/.test(userData.password))\n//   setErrors({...errors, password: \"\"});\n//    else setErrors({ ...errors, password: \"Password invalido\" });\n\n//  }\n//  }\n\n// export default function Form() {\n//   const [userData, setUserData] = useState({\n//     email: '',\n//     password: '',\n//   });\n\n//   const [errors, setErrors] = useState({});\n\n//    const handleChange= (event) => {\n//     const property= event.target.name;\n//     const value= event.target.value;\n\n//       setUserData({ ...userData, [property]: value });\n//       validate ({...userData, [property]: value }, setErrors, errors);\n\n// }\n\n//   if (name === 'email') {\n//     setErrors((prevErrors) => ({\n//       ...prevErrors,\n//       email: !validateEmail(value),\n//     }));\n//   } else if (name === 'password') {\n//     setErrors((prevErrors) => ({\n//       ...prevErrors,\n//       password: !validatePassword(value),\n//     }));\n//   }\n\n//   return (\n//     <form>\n//       <div>\n//         <label htmlFor=\"email\">Email:</label>\n//         <input\n//           type=\"email\"\n//           id=\"email\"\n//           name=\"email\"\n//           value={userData.email}\n//           onChange={handleChange}\n//         />\n//         <span>{errors.email}</span>\n//       </div>\n//       <div>\n//         <label htmlFor=\"password\">Password:</label>\n//         <input\n//           type=\"password\"\n//           id=\"password\"\n//           name=\"password\"\n//           value={userData.password}\n//           onChange={handleChange}\n//         />\n\n//  <span>{errors.password}</span> \n\n//       </div>\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// }\n\n// import React, { useState } from 'react';\n\n// const validate = (userData) => {\n//   const errors = {};\n//   if (!userData.email) errors.email = \"Email vacío\";\n//   else if (!/^\\w+([\\.-]?\\w+)@\\w+([\\.-]?\\w+)(\\.\\w{2,3})+$/.test(userData.email))\n//     errors.email = \"Email inválido\";\n\n//   if (!userData.password) errors.password = \"Ingrese una contraseña.\";\n//   else if (!/^(?=.\\d)(?=.[a-z])(?=.*[A-Z]).{6,10}$/.test(userData.password))\n//     errors.password = \"Contraseña inválida\";\n\n//   return errors;\n// };\n\n// export default function Form() {\n//   const [userData, setUserData] = useState({\n//     email: '',\n//     password: '',\n//   });\n\n//   const [errors, setErrors] = useState({});\n\n//   const handleChange = (event) => {\n//     const { name, value } = event.target;\n//     setUserData({ ...userData, [name]: value });\n//     const newErrors = validate({ ...userData, [name]: value });\n//     setErrors(newErrors);\n//   };\n\n//   return (\n//     <form>\n//       <div>\n//         <label htmlFor=\"email\">Email:</label>\n//         <input\n//           type=\"email\"\n//           id=\"email\"\n//           name=\"email\"\n//           value={userData.email}\n//           onChange={handleChange}\n//         />\n//         <span>{errors.email}</span>\n//       </div>\n//       <div>\n//         <label htmlFor=\"password\">Password:</label>\n//         <input\n//           type=\"password\"\n//           id=\"password\"\n//           name=\"password\"\n//           value={userData.password}\n//           onChange={handleChange}\n//         />\n//         <span>{errors.password}</span>\n//       </div>\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Alumnos/Desktop/Archivos Curso Henry/Henry M2/FT-M2/PI (APP HENRRY M2)/02 - Integration/src/components/Form.jsx"],"sourcesContent":["// import React from 'react';\r\n\r\n// export default function Form() {\r\n//   return (\r\n//     <form>\r\n//       <div>\r\n//         <label htmlFor=\"email\">Email:</label>\r\n//         <input type=\"email\" id=\"email\" name=\"email\" />\r\n//       </div>\r\n//       <div>\r\n//         <label htmlFor=\"password\">Password:</label>\r\n//         <input type=\"password\" id=\"password\" name=\"password\" />\r\n//       </div>\r\n//       <button type=\"submit\">Submit</button>\r\n//     </form>\r\n//   );\r\n// }\r\n//import React, { useState } from 'react';\r\n\r\n// const validate = (userData, setErrors, errors) => {\r\n//   const errors = {};\r\n//   if (!userData.email)  setErrors({...errors, email: \"Email vacio\"});\r\n//   else{\r\n//   if (/^\\w+([\\.-]?\\w+)@\\w+([\\.-]?\\w+)(\\.\\w{2,3})+$/.test(userData.email))\r\n//   setErrors({...errors, email: \"\"});\r\n//   else setErrors({ ...errors, email: \"Email inválido\" });\r\n//   }\r\n// }\r\n\r\n// const validatePassword = (userData, setErrors, errors) => {\r\n//  if (!userData.password)  setErrors({...errors, password: \"Ingrese una constraseña.\"});\r\n//  else{\r\n//  if (/^(?=.\\d)(?=.[a-z])(?=.*[A-Z]).{6,10}$/.test(userData.password))\r\n//   setErrors({...errors, password: \"\"});\r\n//    else setErrors({ ...errors, password: \"Password invalido\" });\r\n\r\n\r\n//  }\r\n//  }\r\n\r\n\r\n\r\n// export default function Form() {\r\n//   const [userData, setUserData] = useState({\r\n//     email: '',\r\n//     password: '',\r\n//   });\r\n\r\n//   const [errors, setErrors] = useState({});\r\n\r\n//    const handleChange= (event) => {\r\n//     const property= event.target.name;\r\n//     const value= event.target.value;\r\n   \r\n//       setUserData({ ...userData, [property]: value });\r\n//       validate ({...userData, [property]: value }, setErrors, errors);\r\n  \r\n  \r\n// }\r\n\r\n  \r\n\r\n//   if (name === 'email') {\r\n//     setErrors((prevErrors) => ({\r\n//       ...prevErrors,\r\n//       email: !validateEmail(value),\r\n//     }));\r\n//   } else if (name === 'password') {\r\n//     setErrors((prevErrors) => ({\r\n//       ...prevErrors,\r\n//       password: !validatePassword(value),\r\n//     }));\r\n//   }\r\n  \r\n\r\n//   return (\r\n//     <form>\r\n//       <div>\r\n//         <label htmlFor=\"email\">Email:</label>\r\n//         <input\r\n//           type=\"email\"\r\n//           id=\"email\"\r\n//           name=\"email\"\r\n//           value={userData.email}\r\n//           onChange={handleChange}\r\n//         />\r\n//         <span>{errors.email}</span>\r\n//       </div>\r\n//       <div>\r\n//         <label htmlFor=\"password\">Password:</label>\r\n//         <input\r\n//           type=\"password\"\r\n//           id=\"password\"\r\n//           name=\"password\"\r\n//           value={userData.password}\r\n//           onChange={handleChange}\r\n//         />\r\n\r\n//  <span>{errors.password}</span> \r\n\r\n//       </div>\r\n//       <button type=\"submit\">Submit</button>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const validate = (userData) => {\r\n//   const errors = {};\r\n//   if (!userData.email) errors.email = \"Email vacío\";\r\n//   else if (!/^\\w+([\\.-]?\\w+)@\\w+([\\.-]?\\w+)(\\.\\w{2,3})+$/.test(userData.email))\r\n//     errors.email = \"Email inválido\";\r\n\r\n//   if (!userData.password) errors.password = \"Ingrese una contraseña.\";\r\n//   else if (!/^(?=.\\d)(?=.[a-z])(?=.*[A-Z]).{6,10}$/.test(userData.password))\r\n//     errors.password = \"Contraseña inválida\";\r\n\r\n//   return errors;\r\n// };\r\n\r\n// export default function Form() {\r\n//   const [userData, setUserData] = useState({\r\n//     email: '',\r\n//     password: '',\r\n//   });\r\n\r\n//   const [errors, setErrors] = useState({});\r\n\r\n//   const handleChange = (event) => {\r\n//     const { name, value } = event.target;\r\n//     setUserData({ ...userData, [name]: value });\r\n//     const newErrors = validate({ ...userData, [name]: value });\r\n//     setErrors(newErrors);\r\n//   };\r\n\r\n//   return (\r\n//     <form>\r\n//       <div>\r\n//         <label htmlFor=\"email\">Email:</label>\r\n//         <input\r\n//           type=\"email\"\r\n//           id=\"email\"\r\n//           name=\"email\"\r\n//           value={userData.email}\r\n//           onChange={handleChange}\r\n//         />\r\n//         <span>{errors.email}</span>\r\n//       </div>\r\n//       <div>\r\n//         <label htmlFor=\"password\">Password:</label>\r\n//         <input\r\n//           type=\"password\"\r\n//           id=\"password\"\r\n//           name=\"password\"\r\n//           value={userData.password}\r\n//           onChange={handleChange}\r\n//         />\r\n//         <span>{errors.password}</span>\r\n//       </div>\r\n//       <button type=\"submit\">Submit</button>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAGA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}