{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alumnos\\\\Desktop\\\\Archivos Curso Henry\\\\Henry M2\\\\FT-M2\\\\PI (APP HENRRY M2)\\\\02 - Integration\\\\src\\\\components\\\\Form.jsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n\n// export default function Form() {\n//   return (\n//     <form>\n//       <div>\n//         <label htmlFor=\"email\">Email:</label>\n//         <input type=\"email\" id=\"email\" name=\"email\" />\n//       </div>\n//       <div>\n//         <label htmlFor=\"password\">Password:</label>\n//         <input type=\"password\" id=\"password\" name=\"password\" />\n//       </div>\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// }\n//ESTE ES EL ULTIMO CODIGO QUE HICIMOS =>>>>>>>>>>>>>>>>>>\n// import React, { useState } from 'react';\n\n// const validate = (userData, setErrors, errors) => {\n//   if (!userData.email)  setErrors({...errors, email: \"Email vacio\"});\n//   else{\n//   if (/^\\w+([\\.-]?\\w+)@\\w+([\\.-]?\\w+)(\\.\\w{2,3})+$/.test(userData.email))\n//   setErrors({...errors, email: \"\"});\n//   else setErrors({ ...errors, email: \"Email inválido\" });\n//   }\n\n//  if (!userData.password)  setErrors({...errors, password: \"Ingrese una constraseña.\"});\n//  else{\n//  if (/^(?=.*\\d).{6,10}$/.test(userData.password))\n//   setErrors({...errors, password: \"\"});\n//    else setErrors({ ...errors, password: \"Contraseña: Al menos un num, long : entre 6 y 10 caract. \" });\n\n//  }\n\n// }\n\n// export default function Form() {\n//   const [userData, setUserData] = useState({\n//     email: '',\n//     password: '',\n//   });\n\n//   const [errors, setErrors] = useState({});\n\n//    const handleChange= (event) => {\n//     const property= event.target.name;\n//     const value= event.target.value;\n\n//       setUserData({ ...userData, [property]: value });\n//       validate ({...userData, [property]: value }, setErrors, errors);\n\n// }\n\n//   if (name === 'email') {\n//     setErrors((prevErrors) => ({\n//       ...prevErrors,\n//       email: !validateEmail(value),\n//     }));\n//   } else if (name === 'password') {\n//     setErrors((prevErrors) => ({\n//       ...prevErrors,\n//       password: !validatePassword(value),\n//     }));\n//   }\n\n//   return (\n//     <form>\n//       <div>\n//         <label htmlFor=\"email\">Email:</label>\n//         <input\n//           type=\"email\"\n//           id=\"email\"\n//           name=\"email\"\n//           value={userData.email}\n//           onChange={handleChange}\n//         />\n//         <span>{errors.email}</span>\n//       </div>\n//       <div>\n//         <label htmlFor=\"password\">Password:</label>\n//         <input\n//           type=\"password\"\n//           id=\"password\"\n//           name=\"password\"\n//           value={userData.password}\n//           onChange={handleChange}\n\n//         />\n\n//  <span>{errors.password}</span> \n\n//       </div>\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// }\n\n// import React, { useState } from 'react';\n\n// const validate = (userData) => {\n//   const errors = {};\n//   if (!userData.email) errors.email = \"Email vacío\";\n//   else if (!/^\\w+([\\.-]?\\w+)@\\w+([\\.-]?\\w+)(\\.\\w{2,3})+$/.test(userData.email))\n//     errors.email = \"Email inválido\";\n\n//   if (!userData.password) errors.password = \"Ingrese una contraseña.\";\n//   else if (!/^(?=.\\d)(?=.[a-z])(?=.*[A-Z]).{6,10}$/.test(userData.password))\n//     errors.password = \"Contraseña inválida\";\n\n//   return errors;\n// };\n\n// export default function Form() {\n//   const [userData, setUserData] = useState({\n//     email: '',\n//     password: '',\n//   });\n\n//   const [errors, setErrors] = useState({});\n\n//   const handleChange = (event) => {\n//     const { name, value } = event.target;\n//     setUserData({ ...userData, [name]: value });\n//     const newErrors = validate({ ...userData, [name]: value });\n//     setErrors(newErrors);\n//   };\n\n//   return (\n//     <form>\n//       <div>\n//         <label htmlFor=\"email\">Email:</label>\n//         <input\n//           type=\"email\"\n//           id=\"email\"\n//           name=\"email\"\n//           value={userData.email}\n//           onChange={handleChange}\n//         />\n//         <span>{errors.email}</span>\n//       </div>\n//       <div>\n//         <label htmlFor=\"password\">Password:</label>\n//         <input\n//           type=\"password\"\n//           id=\"password\"\n//           name=\"password\"\n//           value={userData.password}\n//           onChange={handleChange}\n//         />\n//         <span>{errors.password}</span>\n//       </div>\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// }\n// ESTE ES EL ULTIMMO CODIGO QUE REALICE (al clickear en cada input solo renderiza los mensajes correspondientes a los campos pedidos )\nimport React, { useState } from 'react';\n\n// Función de validación para el email\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validateEmail = email => {\n  if (!email) return \"Email vacio\";\n  if (/^\\w+([\\.-]?\\w+)@\\w+([\\.-]?\\w+)(\\.\\w{2,3})+$/.test(email)) return \"\";\n  return \"Email inválido\";\n};\n\n// Función de validación para la contraseña\nconst validatePassword = password => {\n  if (!password) return \"Ingrese una contraseña.\";\n  if (/^(?=.*\\d).{6,10}$/.test(password)) return \"\";\n  return \"Contraseña: Al menos un número, longitud entre 6 y 10 caracteres.\";\n};\nexport default function Form() {\n  _s();\n  const [userData, setUserData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({\n    email: '',\n    password: ''\n  });\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      [name]: value\n    });\n    if (name === 'email') {\n      setErrors({\n        ...errors,\n        email: validateEmail(value)\n      });\n    } else if (name === 'password') {\n      setErrors({\n        ...errors,\n        password: validatePassword(value)\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: userData.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: userData.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n// SALIOOOOOOOOOOOOOOOOOOOOOOO\n_s(Form, \"xDHk3S6mK7uM9h1O8jbaISb4YUE=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","validateEmail","email","test","validatePassword","password","Form","_s","userData","setUserData","errors","setErrors","handleChange","event","name","value","target","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Alumnos/Desktop/Archivos Curso Henry/Henry M2/FT-M2/PI (APP HENRRY M2)/02 - Integration/src/components/Form.jsx"],"sourcesContent":["// import React from 'react';\r\n\r\n// export default function Form() {\r\n//   return (\r\n//     <form>\r\n//       <div>\r\n//         <label htmlFor=\"email\">Email:</label>\r\n//         <input type=\"email\" id=\"email\" name=\"email\" />\r\n//       </div>\r\n//       <div>\r\n//         <label htmlFor=\"password\">Password:</label>\r\n//         <input type=\"password\" id=\"password\" name=\"password\" />\r\n//       </div>\r\n//       <button type=\"submit\">Submit</button>\r\n//     </form>\r\n//   );\r\n// }\r\n//ESTE ES EL ULTIMO CODIGO QUE HICIMOS =>>>>>>>>>>>>>>>>>>\r\n// import React, { useState } from 'react';\r\n\r\n// const validate = (userData, setErrors, errors) => {\r\n//   if (!userData.email)  setErrors({...errors, email: \"Email vacio\"});\r\n//   else{\r\n//   if (/^\\w+([\\.-]?\\w+)@\\w+([\\.-]?\\w+)(\\.\\w{2,3})+$/.test(userData.email))\r\n//   setErrors({...errors, email: \"\"});\r\n//   else setErrors({ ...errors, email: \"Email inválido\" });\r\n//   }\r\n\r\n//  if (!userData.password)  setErrors({...errors, password: \"Ingrese una constraseña.\"});\r\n//  else{\r\n//  if (/^(?=.*\\d).{6,10}$/.test(userData.password))\r\n//   setErrors({...errors, password: \"\"});\r\n//    else setErrors({ ...errors, password: \"Contraseña: Al menos un num, long : entre 6 y 10 caract. \" });\r\n\r\n\r\n//  }\r\n \r\n// }\r\n\r\n\r\n\r\n// export default function Form() {\r\n//   const [userData, setUserData] = useState({\r\n//     email: '',\r\n//     password: '',\r\n//   });\r\n\r\n//   const [errors, setErrors] = useState({});\r\n\r\n//    const handleChange= (event) => {\r\n//     const property= event.target.name;\r\n//     const value= event.target.value;\r\n   \r\n//       setUserData({ ...userData, [property]: value });\r\n//       validate ({...userData, [property]: value }, setErrors, errors);\r\n  \r\n  \r\n// }\r\n\r\n  \r\n\r\n//   if (name === 'email') {\r\n//     setErrors((prevErrors) => ({\r\n//       ...prevErrors,\r\n//       email: !validateEmail(value),\r\n//     }));\r\n//   } else if (name === 'password') {\r\n//     setErrors((prevErrors) => ({\r\n//       ...prevErrors,\r\n//       password: !validatePassword(value),\r\n//     }));\r\n//   }\r\n  \r\n\r\n//   return (\r\n//     <form>\r\n//       <div>\r\n//         <label htmlFor=\"email\">Email:</label>\r\n//         <input\r\n//           type=\"email\"\r\n//           id=\"email\"\r\n//           name=\"email\"\r\n//           value={userData.email}\r\n//           onChange={handleChange}\r\n//         />\r\n//         <span>{errors.email}</span>\r\n//       </div>\r\n//       <div>\r\n//         <label htmlFor=\"password\">Password:</label>\r\n//         <input\r\n//           type=\"password\"\r\n//           id=\"password\"\r\n//           name=\"password\"\r\n//           value={userData.password}\r\n//           onChange={handleChange}\r\n        \r\n//         />\r\n\r\n//  <span>{errors.password}</span> \r\n\r\n//       </div>\r\n//       <button type=\"submit\">Submit</button>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const validate = (userData) => {\r\n//   const errors = {};\r\n//   if (!userData.email) errors.email = \"Email vacío\";\r\n//   else if (!/^\\w+([\\.-]?\\w+)@\\w+([\\.-]?\\w+)(\\.\\w{2,3})+$/.test(userData.email))\r\n//     errors.email = \"Email inválido\";\r\n\r\n//   if (!userData.password) errors.password = \"Ingrese una contraseña.\";\r\n//   else if (!/^(?=.\\d)(?=.[a-z])(?=.*[A-Z]).{6,10}$/.test(userData.password))\r\n//     errors.password = \"Contraseña inválida\";\r\n\r\n//   return errors;\r\n// };\r\n\r\n// export default function Form() {\r\n//   const [userData, setUserData] = useState({\r\n//     email: '',\r\n//     password: '',\r\n//   });\r\n\r\n//   const [errors, setErrors] = useState({});\r\n\r\n//   const handleChange = (event) => {\r\n//     const { name, value } = event.target;\r\n//     setUserData({ ...userData, [name]: value });\r\n//     const newErrors = validate({ ...userData, [name]: value });\r\n//     setErrors(newErrors);\r\n//   };\r\n\r\n//   return (\r\n//     <form>\r\n//       <div>\r\n//         <label htmlFor=\"email\">Email:</label>\r\n//         <input\r\n//           type=\"email\"\r\n//           id=\"email\"\r\n//           name=\"email\"\r\n//           value={userData.email}\r\n//           onChange={handleChange}\r\n//         />\r\n//         <span>{errors.email}</span>\r\n//       </div>\r\n//       <div>\r\n//         <label htmlFor=\"password\">Password:</label>\r\n//         <input\r\n//           type=\"password\"\r\n//           id=\"password\"\r\n//           name=\"password\"\r\n//           value={userData.password}\r\n//           onChange={handleChange}\r\n//         />\r\n//         <span>{errors.password}</span>\r\n//       </div>\r\n//       <button type=\"submit\">Submit</button>\r\n//     </form>\r\n//   );\r\n// }\r\n// ESTE ES EL ULTIMMO CODIGO QUE REALICE (al clickear en cada input solo renderiza los mensajes correspondientes a los campos pedidos )\r\nimport React, { useState } from 'react';\r\n\r\n// Función de validación para el email\r\nconst validateEmail = (email) => {\r\n  if (!email) return \"Email vacio\";\r\n  if (/^\\w+([\\.-]?\\w+)@\\w+([\\.-]?\\w+)(\\.\\w{2,3})+$/.test(email)) return \"\";\r\n  return \"Email inválido\";\r\n};\r\n\r\n// Función de validación para la contraseña\r\nconst validatePassword = (password) => {\r\n  if (!password) return \"Ingrese una contraseña.\";\r\n  if (/^(?=.*\\d).{6,10}$/.test(password)) return \"\";\r\n  return \"Contraseña: Al menos un número, longitud entre 6 y 10 caracteres.\";\r\n};\r\n\r\nexport default function Form() {\r\n  const [userData, setUserData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserData({ ...userData, [name]: value });\r\n\r\n    if (name === 'email') {\r\n      setErrors({ ...errors, email: validateEmail(value) });\r\n    } else if (name === 'password') {\r\n      setErrors({ ...errors, password: validatePassword(value) });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <div>\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          value={userData.email}\r\n          onChange={handleChange}\r\n        />\r\n        <span>{errors.email}</span>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={userData.password}\r\n          onChange={handleChange}\r\n        />\r\n        <span>{errors.password}</span>\r\n      </div>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n}\r\n// SALIOOOOOOOOOOOOOOOOOOOOOOO"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAGA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/B,IAAI,CAACA,KAAK,EAAE,OAAO,aAAa;EAChC,IAAI,6CAA6C,CAACC,IAAI,CAACD,KAAK,CAAC,EAAE,OAAO,EAAE;EACxE,OAAO,gBAAgB;AACzB,CAAC;;AAED;AACA,MAAME,gBAAgB,GAAIC,QAAQ,IAAK;EACrC,IAAI,CAACA,QAAQ,EAAE,OAAO,yBAAyB;EAC/C,IAAI,mBAAmB,CAACF,IAAI,CAACE,QAAQ,CAAC,EAAE,OAAO,EAAE;EACjD,OAAO,mEAAmE;AAC5E,CAAC;AAED,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IACvCI,KAAK,EAAE,EAAE;IACTG,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC;IACnCI,KAAK,EAAE,EAAE;IACTG,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMO,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCP,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACM,IAAI,GAAGC;IAAM,CAAC,CAAC;IAE3C,IAAID,IAAI,KAAK,OAAO,EAAE;MACpBH,SAAS,CAAC;QAAE,GAAGD,MAAM;QAAER,KAAK,EAAED,aAAa,CAACc,KAAK;MAAE,CAAC,CAAC;IACvD,CAAC,MAAM,IAAID,IAAI,KAAK,UAAU,EAAE;MAC9BH,SAAS,CAAC;QAAE,GAAGD,MAAM;QAAEL,QAAQ,EAAED,gBAAgB,CAACW,KAAK;MAAE,CAAC,CAAC;IAC7D;EACF,CAAC;EAED,oBACEf,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAOkB,OAAO,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrCtB,OAAA;QACEuB,IAAI,EAAC,OAAO;QACZC,EAAE,EAAC,OAAO;QACVV,IAAI,EAAC,OAAO;QACZC,KAAK,EAAEP,QAAQ,CAACN,KAAM;QACtBuB,QAAQ,EAAEb;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFtB,OAAA;QAAAiB,QAAA,EAAOP,MAAM,CAACR;MAAK;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACNtB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAOkB,OAAO,EAAC,UAAU;QAAAD,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3CtB,OAAA;QACEuB,IAAI,EAAC,UAAU;QACfC,EAAE,EAAC,UAAU;QACbV,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEP,QAAQ,CAACH,QAAS;QACzBoB,QAAQ,EAAEb;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFtB,OAAA;QAAAiB,QAAA,EAAOP,MAAM,CAACL;MAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACNtB,OAAA;MAAQuB,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX;AACA;AAAAf,EAAA,CAlDwBD,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}